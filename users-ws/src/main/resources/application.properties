server.port=${PORT:0}
spring.application.name=users-ws
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
# to have our app automatically restarted & redeployed in case of a change
spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# h2 has firewall built in, to be able to send requests to h2 through gateway add:
spring.h2.console.settings.web-allow-others=true

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:testdb
#  jdbc:mysql://localhost:3306/users_app?serverTimezone=UTC
spring.datasource.username=micro
spring.datasource.password=micro

gateway.ip=	192.168.178.22

# 10 days in ms
token.expiration_time=864000000
token.secret=019282734jkj2hjghvfhb38y43rj4

login.url.path=/users/login

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.circuitbreakers.enabled=true

logging.level.com.microservices.spring.cloud.users.ws.data.AlbumsServiceClient=DEBUG

resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10000ms
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10

resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-ws.max-attempts=3
resilience4j.retry.instances.albums-ws.wait-duration=2s
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5

